{"version":3,"sources":["components/useLog.js","components/main-component.js","components/show-code/showCode.js","components/show-code/service.js","App.js","index.js"],"names":["useLog","logRef","useRef","useState","messages","setMessages","useEffect","current","scrollTo","scrollHeight","className","ref","onClick","message","console","log","props","ConsoleComponent","Panel3","React","lazy","_instance","options","tabs","id","title","panelComponent","iconClass","fallback","selectedTabID","onLoad","onInit","onChange","onOpen","beforeSelect","onFirstSelect","onSelect","beforeClose","onClose","onDestroy","useDynTabs","Tablist","Panellist","ready","isVertical","setIsVertical","instance","actions","openNewTab","open","closable","then","toggleDirection","setOption","getOption","refresh","toggleVertical","_isVertical","selectTab3","isOpen","select","disableSelectedTab","setTab","getData","disable","closeSelectedTab","close","disableAccessibility","customizeCloseIcon","e","target","includes","openTabIDs","map","api","tabProps","style","padding","children","iconProps","margin","background","borderRadius","width","display","theme","showCode","setShowCode","code","replace","getCode","htmlFor","type","value","App","scopeSelector","setScopeSelector","href","key","src","process","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c70ed12.chunk.js","sourcesContent":["import React, {useState, useRef, useEffect} from 'react';\r\nconst useLog = () => {\r\n  const logRef = useRef(null);\r\n  let [messages, setMessages] = useState('');\r\n  const addMessage = (message) => {\r\n    console.log(message);\r\n    messages = messages + '\\n' + message;\r\n    setMessages(messages);\r\n  };\r\n  useEffect(() => {\r\n    logRef.current.scrollTo(0, logRef.current.scrollHeight);\r\n  });\r\n  const ConsoleComponent = () => {\r\n    return (\r\n      <div className=\"log-container\">\r\n        <div className=\"log\" ref={logRef}>\r\n          <pre>{messages}</pre>\r\n          {messages && (\r\n            <span\r\n              className=\"fa fa-trash clear-log\"\r\n              onClick={() => {\r\n                setMessages('');\r\n              }}></span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  return [ConsoleComponent, addMessage];\r\n};\r\nexport default useLog;\r\n","import React, {useState, useRef, Suspense} from 'react';\r\nimport useDynTabs from 'react-dyn-tabs';\r\nimport useLog from './useLog.js';\r\nexport default function (props) {\r\n  const ref = useRef({});\r\n  const [ConsoleComponent, log] = useLog();\r\n  // assign and update ref.current.log with new value of log function\r\n  ref.current.log = log;\r\n  // define panel components\r\n  function Panel1() {\r\n    return <p>tab content 1</p>;\r\n  }\r\n  function Panel2() {\r\n    return <p>tab content 2</p>;\r\n  }\r\n  const Panel3 = React.lazy(() => import('./lazyPanel.js'));\r\n  function LazyPanel3(props) {\r\n    return (\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <Panel3 {...props}></Panel3>\r\n      </Suspense>\r\n    );\r\n  }\r\n  // define options\r\n  const options = {\r\n    tabs: [\r\n      {id: '1', title: 'tab 1', panelComponent: Panel1, iconClass: 'fa fa-home'},\r\n      {id: '2', title: 'tab 2', lazy: true, panelComponent: Panel2, iconClass: 'fa fa-book'},\r\n      {id: '3', title: 'lazy tab 3', lazy: true, panelComponent: LazyPanel3},\r\n    ],\r\n    selectedTabID: '1',\r\n    onLoad: function () {\r\n      ref.current.log('[onLoad]');\r\n    },\r\n    onInit: function () {\r\n      //don't use setState inside the onInit callback because it leads to an infinite loop.\r\n      console.log('[onInit]');\r\n    },\r\n    onChange: function () {\r\n      ref.current.log('[onChange]');\r\n    },\r\n    onOpen: function () {\r\n      ref.current.log('[onOpen]');\r\n    },\r\n    beforeSelect: function () {\r\n      ref.current.log('[beforeSelect]');\r\n      return true;\r\n    },\r\n    onFirstSelect: function () {\r\n      ref.current.log('[onFirstSelect]');\r\n    },\r\n    onSelect: function () {\r\n      ref.current.log('[onSelect]');\r\n    },\r\n    beforeClose: function () {\r\n      ref.current.log('[beforeClose]');\r\n      return true;\r\n    },\r\n    onClose: function () {\r\n      ref.current.log('[onClose]');\r\n    },\r\n    onDestroy: function () {\r\n      ref.current.log('[onDestroy]');\r\n    },\r\n  };\r\n  const [Tablist, Panellist, ready] = useDynTabs(options);\r\n  const [isVertical, setIsVertical] = useState(false);\r\n  let _instance;\r\n  ready((instance) => {\r\n    _instance = instance;\r\n  });\r\n  const actions = {\r\n    openNewTab: () => {\r\n      _instance\r\n        .open({\r\n          title: 'new tab',\r\n          closable: false,\r\n          panelComponent: (props) => <p>new tab content</p>,\r\n        })\r\n        .then(() => {\r\n          ref.current.log('(new tab is open)');\r\n        });\r\n    },\r\n    toggleDirection: () => {\r\n      _instance.setOption('direction', _instance.getOption('direction') === 'ltr' ? 'rtl' : 'ltr').refresh();\r\n    },\r\n    toggleVertical: () => {\r\n      const _isVertical = _instance.getOption('isVertical');\r\n      _instance.setOption('isVertical', !_isVertical).refresh();\r\n      setIsVertical(!_isVertical);\r\n    },\r\n    selectTab3: () => {\r\n      if (_instance.isOpen('3')) {\r\n        _instance.select('3').then(() => {\r\n          ref.current.log('(tab 3 is selected)');\r\n        });\r\n      }\r\n    },\r\n    disableSelectedTab: () => {\r\n      _instance.setTab(_instance.getData().selectedTabID, {disable: true}).refresh();\r\n    },\r\n    closeSelectedTab: () => {\r\n      const {selectedTabID} = _instance.getData();\r\n      _instance.close(selectedTabID);\r\n    },\r\n    disableAccessibility: () => {\r\n      _instance.setOption('accessibility', false).refresh();\r\n    },\r\n    customizeCloseIcon: () => {\r\n      _instance.setOption('beforeSelect', function (e) {\r\n        if (e.target.className.includes('custom-close-icon')) {\r\n          return false;\r\n        }\r\n        ref.current.log('[beforeSelect]');\r\n        return true;\r\n      });\r\n      _instance.getData().openTabIDs.map((id) => {\r\n        _instance.setTab(id, {closable: false});\r\n      });\r\n      _instance\r\n        .setOption('tabComponent', (props) => {\r\n          const {id, api: instance} = props;\r\n          return (\r\n            <>\r\n              <button {...props.tabProps}>\r\n                <span\r\n                  onClick={() => {\r\n                    instance.close(id);\r\n                  }}\r\n                  className=\"custom-close-icon\"\r\n                  style={{padding: '0em 0.4em'}}>\r\n                  ×\r\n                </span>\r\n                {props.children}\r\n                {props.iconProps && <span {...props.iconProps}></span>}\r\n              </button>\r\n            </>\r\n          );\r\n        })\r\n        .refresh();\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <div id=\"actions\">\r\n        <div>\r\n          <button onClick={actions.openNewTab}>open new tab</button>\r\n          <button onClick={actions.toggleDirection}>toggle direction</button>\r\n          <button onClick={actions.toggleVertical}>vertical | horizontal</button>\r\n          <button onClick={actions.selectTab3}>select tab 3</button>\r\n          <button onClick={actions.disableSelectedTab}>disable selected tab</button>\r\n          <button onClick={actions.closeSelectedTab}>close selected tab</button>\r\n          <button onClick={actions.disableAccessibility}>disable accessibility</button>\r\n          <button onClick={actions.customizeCloseIcon}>customize close icon</button>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          margin: '10px',\r\n          background: 'white',\r\n          padding: '10px',\r\n          borderRadius: '7px',\r\n        }}>\r\n        <div style={{width: '100%', display: isVertical ? 'table' : 'block'}}>\r\n          <Tablist></Tablist>\r\n          <Panellist></Panellist>\r\n        </div>\r\n      </div>\r\n      <ConsoleComponent></ConsoleComponent>\r\n    </>\r\n  );\r\n}\r\n","import React, {useState} from 'react';\r\nimport {getCode} from './service.js';\r\nimport './show-code.css';\r\nexport default function ({theme}) {\r\n  const [showCode, setShowCode] = useState(false);\r\n  const code = getCode(theme);\r\n  const checkboxOnChange = (e) => {\r\n    setShowCode(!showCode);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"show-code\">\r\n        <label htmlFor=\"show-code-checkbox\">show code</label>\r\n        <input type=\"checkbox\" id=\"show-code-checkbox\" value={showCode} onChange={checkboxOnChange}></input>\r\n      </div>\r\n      {showCode && <pre>{code}</pre>}\r\n    </>\r\n  );\r\n}\r\n","export const getCode = (theme) => {\r\n  const code = `\r\n    import React, {useState, useRef, Suspense} from 'react';\r\n    import 'react-dyn-tabs/style/react-dyn-tabs.min.css';\r\n    import 'react-dyn-tabs/themes/react-dyn-tabs-@theme.min.css';\r\n    import useDynTabs from 'react-dyn-tabs';\r\n    import useLog from './useLog.js';\r\n    export default function (props) {\r\n      const ref = useRef({});\r\n      const [ConsoleComponent, log] = useLog();\r\n      // assign and update ref.current.log with new value of log function\r\n      ref.current.log = log;\r\n      // define panel components\r\n      function Panel1() {\r\n        return <p>tab content 1</p>;\r\n      }\r\n      function Panel2() {\r\n        return <p>tab content 2</p>;\r\n      }\r\n      const Panel3 = React.lazy(() => import('./lazyPanel.js'));\r\n      function LazyPanel3(props) {\r\n        return (\r\n          <Suspense fallback={<div>Loading...</div>}>\r\n            <Panel3 {...props}></Panel3>\r\n          </Suspense>\r\n        );\r\n      }\r\n      // define options\r\n      const options = {\r\n        tabs: [\r\n          {id: '1', title: 'tab 1', panelComponent: Panel1, iconClass: 'fa fa-home'},\r\n          {id: '2', title: 'tab 2', lazy: true, panelComponent: Panel2, iconClass: 'fa fa-book'},\r\n          {id: '3', title: 'lazy tab 3', lazy: true, panelComponent: LazyPanel3},\r\n        ],\r\n        selectedTabID: '1',\r\n        onLoad: function () {\r\n          ref.current.log('[onLoad]');\r\n        },\r\n        onInit: function () {\r\n          //don't use setState inside the onInit callback because it leads to an infinite loop.\r\n          console.log('[onInit]');\r\n        },\r\n        onChange: function () {\r\n          ref.current.log('[onChange]');\r\n        },\r\n        onOpen: function () {\r\n          ref.current.log('[onOpen]');\r\n        },\r\n        beforeSelect: function () {\r\n          ref.current.log('[beforeSelect]');\r\n          return true;\r\n        },\r\n        onFirstSelect: function () {\r\n          ref.current.log('[onFirstSelect]');\r\n        },\r\n        onSelect: function () {\r\n          ref.current.log('[onSelect]');\r\n        },\r\n        beforeClose: function () {\r\n          ref.current.log('[beforeClose]');\r\n          return true;\r\n        },\r\n        onClose: function () {\r\n          ref.current.log('[onClose]');\r\n        },\r\n        onDestroy: function () {\r\n          ref.current.log('[onDestroy]');\r\n        },\r\n      };\r\n      const [Tablist, Panellist, ready] = useDynTabs(options);\r\n      const [isVertical, setIsVertical] = useState(false);\r\n      let _instance;\r\n      ready((instance) => {\r\n        _instance = instance;\r\n      });\r\n      const actions = {\r\n        openNewTab: () => {\r\n          _instance\r\n            .open({\r\n              title: 'new tab',\r\n              closable: false,\r\n              panelComponent: (props) => <p>new tab content</p>,\r\n            })\r\n            .then(() => {\r\n              ref.current.log('(new tab is open)');\r\n            });\r\n        },\r\n        toggleDirection: () => {\r\n          _instance.setOption('direction', _instance.getOption('direction') === 'ltr' ? 'rtl' : 'ltr').refresh();\r\n        },\r\n        toggleVertical: () => {\r\n          const _isVertical = _instance.getOption('isVertical');\r\n          _instance.setOption('isVertical', !_isVertical).refresh();\r\n          setIsVertical(!_isVertical);\r\n        },\r\n        selectTab3: () => {\r\n          if (_instance.isOpen('3')) {\r\n            _instance.select('3').then(() => {\r\n              ref.current.log('(tab 3 is selected)');\r\n            });\r\n          }\r\n        },\r\n        disableSelectedTab: () => {\r\n          _instance.setTab(_instance.getData().selectedTabID, {disable: true}).refresh();\r\n        },\r\n        closeSelectedTab: () => {\r\n          const {selectedTabID} = _instance.getData();\r\n          _instance.close(selectedTabID);\r\n        },\r\n        disableAccessibility: () => {\r\n          _instance.setOption('accessibility', false).refresh();\r\n        },\r\n        customizeCloseIcon: () => {\r\n          _instance.setOption('beforeSelect', function (e) {\r\n            if (e.target.className.includes('custom-close-icon')) {\r\n              return false;\r\n            }\r\n            ref.current.log('[beforeSelect]');\r\n            return true;\r\n          });\r\n          _instance.getData().openTabIDs.map((id) => {\r\n            _instance.setTab(id, {closable: false});\r\n          });\r\n          _instance\r\n            .setOption('tabComponent', (props) => {\r\n              const {id, api: instance} = props;\r\n              return (\r\n                <>\r\n                  <button {...props.tabProps}>\r\n                    <span\r\n                      onClick={() => {\r\n                        instance.close(id);\r\n                      }}\r\n                      className=\"custom-close-icon\"\r\n                      style={{padding: '0em 0.4em'}}>\r\n                      ×\r\n                    </span>\r\n                    {props.children}\r\n                    {props.iconProps && <span {...props.iconProps}></span>}\r\n                  </button>\r\n                </>\r\n              );\r\n            })\r\n            .refresh();\r\n        },\r\n      };\r\n      return (\r\n        <>\r\n          <div id=\"actions\">\r\n            <div>\r\n              <button onClick={actions.openNewTab}>open new tab</button>\r\n              <button onClick={actions.toggleDirection}>toggle direction</button>\r\n              <button onClick={actions.toggleVertical}>vertical | horizontal</button>\r\n              <button onClick={actions.selectTab3}>select tab 3</button>\r\n              <button onClick={actions.disableSelectedTab}>disable selected tab</button>\r\n              <button onClick={actions.closeSelectedTab}>close selected tab</button>\r\n              <button onClick={actions.disableAccessibility}>disable accessibility</button>\r\n              <button onClick={actions.customizeCloseIcon}>customize close icon</button>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              margin: '10px',\r\n              background: 'white',\r\n              padding: '10px',\r\n              borderRadius: '7px',\r\n            }}>\r\n            <div style={{width: '100%', display: isVertical ? 'table' : 'block'}}>\r\n              <Tablist></Tablist>\r\n              <Panellist></Panellist>\r\n            </div>\r\n          </div>\r\n          <ConsoleComponent></ConsoleComponent>\r\n        </>\r\n      );\r\n    }\r\n    `.replace('@theme', theme);\r\n  return code;\r\n};\r\n","import React, { useState } from \"react\";\nimport \"react-dyn-tabs/style/react-dyn-tabs.css\";\nimport \"./scoped-themes/card.css\";\nimport \"./scoped-themes/classic.css\";\nimport \"./scoped-themes/basic.css\";\nimport \"./scoped-themes/bootstrap.css\";\nimport \"./App.css\";\nimport MainComponent from \"./components/main-component.js\";\nimport ShowCode from \"./components/show-code/showCode.js\";\nfunction App() {\n  const [scopeSelector, setScopeSelector] = useState(\"card\");\n  const onChangeTheme = (e) => {\n    setScopeSelector(e.target.value);\n  };\n  return (\n    <>\n      <div id=\"header\">\n        <a\n          href=\"https://github.com/dev-javascript/react-dyn-tabs\"\n          target=\"_blank\"\n        >\n          <h1>react-dyn-tabs</h1>\n        </a>\n        <div id=\"theme-container\">\n          <label htmlFor=\"theme-selector\">Theme : </label>\n          <select\n            id=\"theme-selector\"\n            onChange={onChangeTheme}\n            value={scopeSelector}\n          >\n            <option key=\"2\" value=\"card\">\n              card\n            </option>\n            <option key=\"1\" value=\"bootstrap\">\n              bootstrap\n            </option>\n            <option key=\"3\" value=\"basic\">\n              basic\n            </option>\n            <option key=\"4\" value=\"classic\">\n              classic\n            </option>\n          </select>\n        </div>\n      </div>\n      <a\n        href=\"https://github.com/dev-javascript/react-dyn-tabs\"\n        target=\"_blank\"\n      >\n        <img\n          id=\"github-img\"\n          src={`${process.env.PUBLIC_URL}/img/forkme_right_red_aa0000.svg`}\n          alt=\"Fork me on GitHub\"\n        />\n      </a>\n      <div className={scopeSelector}>\n        <MainComponent />\n      </div>\n      <ShowCode theme={scopeSelector}></ShowCode>\n      <div id=\"code-container\">\n        <pre>\n          <code></code>\n        </pre>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}