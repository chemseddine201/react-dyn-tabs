{"version":3,"sources":["components/useLog.js","components/main-component.js","components/show-code/service.js","components/show-code/showCode.js","App.js","index.js"],"names":["useLog","logRef","useRef","useState","messages","setMessages","useEffect","current","scrollTo","scrollHeight","className","ref","onClick","message","console","log","App","ConsoleComponent","Panel3","React","lazy","_instance","isVertical","options","tabs","id","title","panelComponent","iconClass","closable","props","fallback","selectedTabID","onLoad","onInit","onChange","onOpen","beforeSelect","onFirstSelect","onSelect","beforeClose","onClose","onDestroy","useDynTabs","Tablist","Panellist","ready","instance","getOption","actions","openNewTab","open","then","toggleDirection","setOption","refresh","toggleVertical","_isVertical","selectTab3","isOpen","select","disableSelectedTab","setTab","getData","disable","closeSelectedTab","close","disableAccessibility","style","margin","background","padding","borderRadius","width","display","theme","showCode","setShowCode","code","replace","getCode","htmlFor","type","value","e","scopeSelector","setScopeSelector","href","target","key","src","process","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09cbab75.chunk.js","sourcesContent":["import React, {useState, useRef, useEffect} from 'react';\r\nconst useLog = () => {\r\n  const logRef = useRef(null);\r\n  let [messages, setMessages] = useState('');\r\n  const addMessage = (message) => {\r\n    console.log(message);\r\n    messages = messages + '\\n' + message;\r\n    setMessages(messages);\r\n  };\r\n  useEffect(() => {\r\n    logRef.current.scrollTo(0, logRef.current.scrollHeight);\r\n  });\r\n  const ConsoleComponent = () => {\r\n    return (\r\n      <div className=\"log-container\">\r\n        <div className=\"log\" ref={logRef}>\r\n          <pre>{messages}</pre>\r\n          {messages && (\r\n            <span\r\n              className=\"fa fa-trash clear-log\"\r\n              onClick={() => {\r\n                setMessages('');\r\n              }}></span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  return [ConsoleComponent, addMessage];\r\n};\r\nexport default useLog;\r\n","import React, {useRef, Suspense} from 'react';\r\nimport useDynTabs from 'react-dyn-tabs';\r\nimport useLog from './useLog.js';\r\nexport default function App() {\r\n  const ref = useRef({});\r\n  const [ConsoleComponent, log] = useLog();\r\n  // assign and update ref.current.log with new value of log function\r\n  ref.current.log = log;\r\n  // define panel components\r\n  function Panel1() {\r\n    return <p>tab content 1</p>;\r\n  }\r\n  function Panel2() {\r\n    return <p>tab content 2</p>;\r\n  }\r\n  const Panel3 = React.lazy(() => import('./lazyPanel.js'));\r\n  function LazyPanel3(props) {\r\n    return (\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <Panel3 {...props}></Panel3>\r\n      </Suspense>\r\n    );\r\n  }\r\n  // define options\r\n  const options = {\r\n    tabs: [\r\n      {id: '1', title: 'tab 1', panelComponent: Panel1, iconClass: 'fa fa-home', closable: false},\r\n      {id: '2', title: 'tab 2', lazy: true, panelComponent: Panel2, iconClass: 'fa fa-book'},\r\n      {id: '3', title: 'lazy tab 3', lazy: true, panelComponent: LazyPanel3},\r\n    ],\r\n    selectedTabID: '1',\r\n    onLoad: function () {\r\n      ref.current.log('[onLoad]');\r\n    },\r\n    onInit: function () {\r\n      //don't use setState inside the onInit callback because it leads to an infinite loop.\r\n      console.log('[onInit]');\r\n    },\r\n    onChange: function () {\r\n      ref.current.log('[onChange]');\r\n    },\r\n    onOpen: function () {\r\n      ref.current.log('[onOpen]');\r\n    },\r\n    beforeSelect: function () {\r\n      ref.current.log('[beforeSelect]');\r\n      return true;\r\n    },\r\n    onFirstSelect: function () {\r\n      ref.current.log('[onFirstSelect]');\r\n    },\r\n    onSelect: function () {\r\n      ref.current.log('[onSelect]');\r\n    },\r\n    beforeClose: function () {\r\n      ref.current.log('[beforeClose]');\r\n      return true;\r\n    },\r\n    onClose: function () {\r\n      ref.current.log('[onClose]');\r\n    },\r\n    onDestroy: function () {\r\n      ref.current.log('[onDestroy]');\r\n    },\r\n  };\r\n  const [Tablist, Panellist, ready] = useDynTabs(options);\r\n  let _instance, isVertical;\r\n  ready((instance) => {\r\n    _instance = instance;\r\n    isVertical = _instance.getOption('isVertical');\r\n  });\r\n  const actions = {\r\n    openNewTab: () => {\r\n      _instance\r\n        .open({\r\n          title: 'new tab',\r\n          lazy: true,\r\n          panelComponent: function PanelComponent() {\r\n            return <p>new tab content</p>;\r\n          },\r\n        })\r\n        .then(() => {\r\n          ref.current.log('(new tab is open)');\r\n        });\r\n    },\r\n    toggleDirection: () => {\r\n      _instance.setOption('direction', _instance.getOption('direction') === 'ltr' ? 'rtl' : 'ltr').refresh();\r\n    },\r\n    toggleVertical: () => {\r\n      const _isVertical = _instance.getOption('isVertical');\r\n      _instance.setOption('isVertical', !_isVertical).refresh();\r\n    },\r\n    selectTab3: () => {\r\n      if (_instance.isOpen('3')) {\r\n        _instance.select('3').then(() => {\r\n          ref.current.log('(tab 3 is selected)');\r\n        });\r\n      }\r\n    },\r\n    disableSelectedTab: () => {\r\n      _instance.setTab(_instance.getData().selectedTabID, {disable: true}).refresh();\r\n    },\r\n    closeSelectedTab: () => {\r\n      const {selectedTabID} = _instance.getData();\r\n      _instance.close(selectedTabID);\r\n    },\r\n    disableAccessibility: () => {\r\n      _instance.setOption('accessibility', false).refresh();\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <div id=\"actions\">\r\n        <div>\r\n          <button onClick={actions.openNewTab}>open new tab</button>\r\n          <button onClick={actions.toggleDirection}>toggle direction</button>\r\n          <button onClick={actions.toggleVertical}>vertical | horizontal</button>\r\n          <button onClick={actions.selectTab3}>select tab 3</button>\r\n          <button onClick={actions.disableSelectedTab}>disable selected tab</button>\r\n          <button onClick={actions.closeSelectedTab}>close selected tab</button>\r\n          <button onClick={actions.disableAccessibility}>disable accessibility</button>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          margin: '10px',\r\n          background: 'white',\r\n          padding: '2px',\r\n          borderRadius: '7px',\r\n        }}>\r\n        <div style={{width: '100%', display: isVertical ? 'inline-block' : 'block'}}>\r\n          <Tablist></Tablist>\r\n          <Panellist></Panellist>\r\n        </div>\r\n      </div>\r\n      <ConsoleComponent></ConsoleComponent>\r\n    </>\r\n  );\r\n}\r\n","export const getCode = (theme) => {\r\n  const code = `\r\n  import React, {Suspense} from 'react';\r\n  import 'react-dyn-tabs/style/react-dyn-tabs.min.css';\r\n  import 'react-dyn-tabs/themes/react-dyn-tabs-@theme.min.css';\r\n  import useDynTabs from 'react-dyn-tabs';\r\n  \r\n  \r\n  \r\n  export default function App() {\r\n  \r\n  \r\n  \r\n    // define panel components\r\n    function Panel1() {\r\n      return <p>tab content 1</p>;\r\n    }\r\n    function Panel2() {\r\n      return <p>tab content 2</p>;\r\n    }\r\n    const Panel3 = React.lazy(() => import('./lazyPanel.js'));\r\n    function LazyPanel3(props) {\r\n      return (\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n          <Panel3 {...props}></Panel3>\r\n        </Suspense>\r\n      );\r\n    }\r\n  \r\n  \r\n  \r\n    // define options\r\n    const options = {\r\n      tabs: [\r\n        {id: '1', title: 'tab 1', panelComponent: Panel1, iconClass: 'fa fa-home', closable: false},\r\n        {id: '2', title: 'tab 2', lazy: true, panelComponent: Panel2, iconClass: 'fa fa-book'},\r\n        {id: '3', title: 'lazy tab 3', lazy: true, panelComponent: LazyPanel3},\r\n      ],\r\n      selectedTabID: '1',\r\n      onLoad: function () {\r\n        console.log('[onLoad]');\r\n      },\r\n      onInit: function () {\r\n        //don't use setState inside the onInit callback because it leads to an infinite loop.\r\n        console.log('[onInit]');\r\n      },\r\n      onChange: function () {\r\n        console.log('[onChange]');\r\n      },\r\n      onOpen: function () {\r\n        console.log('[onOpen]');\r\n      },\r\n      beforeSelect: function () {\r\n        console.log('[beforeSelect]');\r\n        return true;\r\n      },\r\n      onFirstSelect: function () {\r\n        console.log('[onFirstSelect]');\r\n      },\r\n      onSelect: function () {\r\n        console.log('[onSelect]');\r\n      },\r\n      beforeClose: function () {\r\n        console.log('[beforeClose]');\r\n        return true;\r\n      },\r\n      onClose: function () {\r\n        console.log('[onClose]');\r\n      },\r\n      onDestroy: function () {\r\n        console.log('[onDestroy]');\r\n      },\r\n    };\r\n  \r\n  \r\n  \r\n    const [Tablist, Panellist, ready] = useDynTabs(options);\r\n    let _instance, isVertical;\r\n    ready((instance) => {\r\n      _instance = instance;\r\n      isVertical = _instance.getOption('isVertical');\r\n    });\r\n  \r\n  \r\n  \r\n    const actions = {\r\n      openNewTab: () => {\r\n        _instance\r\n          .open({\r\n            title: 'new tab',\r\n            lazy: true,\r\n            panelComponent: function PanelComponent() {\r\n              return <p>new tab content</p>;\r\n            },\r\n          })\r\n          .then(() => {\r\n            console.log('(new tab is open)');\r\n          });\r\n      },\r\n      toggleDirection: () => {\r\n        _instance.setOption('direction', _instance.getOption('direction') === 'ltr' ? 'rtl' : 'ltr').refresh();\r\n      },\r\n      toggleVertical: () => {\r\n        const _isVertical = _instance.getOption('isVertical');\r\n        _instance.setOption('isVertical', !_isVertical).refresh();\r\n      },\r\n      selectTab3: () => {\r\n        if (_instance.isOpen('3')) {\r\n          _instance.select('3').then(() => {\r\n            console.log('(tab 3 is selected)');\r\n          });\r\n        }\r\n      },\r\n      disableSelectedTab: () => {\r\n        _instance.setTab(_instance.getData().selectedTabID, {disable: true}).refresh();\r\n      },\r\n      closeSelectedTab: () => {\r\n        _instance.close(_instance.getData().selectedTabID);\r\n      },\r\n      disableAccessibility: () => {\r\n        _instance.setOption('accessibility', false).refresh();\r\n      },\r\n    };\r\n  \r\n  \r\n    \r\n    return (\r\n      <>\r\n        <div id=\"actions\">\r\n          <div>\r\n            <button onClick={actions.openNewTab}>open new tab</button>\r\n            <button onClick={actions.toggleDirection}>toggle direction</button>\r\n            <button onClick={actions.toggleVertical}>vertical | horizontal</button>\r\n            <button onClick={actions.selectTab3}>select tab 3</button>\r\n            <button onClick={actions.disableSelectedTab}>disable selected tab</button>\r\n            <button onClick={actions.closeSelectedTab}>close selected tab</button>\r\n            <button onClick={actions.disableAccessibility}>disable accessibility</button>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            margin: '10px',\r\n            background: 'white',\r\n            padding: '2px',\r\n            borderRadius: '7px',\r\n          }}>\r\n          <div style={{width: '100%', display: isVertical ? 'inline-block' : 'block'}}>\r\n            <Tablist></Tablist>\r\n            <Panellist></Panellist>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n    `.replace('@theme', theme);\r\n  return code;\r\n};\r\n","import React, {useState} from 'react';\r\nimport {getCode} from './service.js';\r\nimport './show-code.css';\r\nexport default function ({theme}) {\r\n  const [showCode, setShowCode] = useState(false);\r\n  const code = getCode(theme);\r\n  const checkboxOnChange = (e) => {\r\n    setShowCode(!showCode);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"show-code\">\r\n        <label htmlFor=\"show-code-checkbox\">show code</label>\r\n        <input type=\"checkbox\" id=\"show-code-checkbox\" value={showCode} onChange={checkboxOnChange}></input>\r\n      </div>\r\n      {showCode && <pre>{code}</pre>}\r\n    </>\r\n  );\r\n}\r\n","import React, {useState} from 'react';\nimport 'react-dyn-tabs/style/react-dyn-tabs.css';\nimport './scoped-themes/card.css';\nimport './scoped-themes/classic.css';\nimport './scoped-themes/basic.css';\nimport './scoped-themes/bootstrap.css';\nimport './App.css';\nimport MainComponent from './components/main-component.js';\nimport ShowCode from './components/show-code/showCode.js';\nfunction App() {\n  const [scopeSelector, setScopeSelector] = useState('card');\n  const onChangeTheme = (e) => {\n    setScopeSelector(e.target.value);\n  };\n  return (\n    <>\n      <div id=\"header\">\n        <a href=\"https://github.com/dev-javascript/react-dyn-tabs\" target=\"_blank\">\n          <h1>react-dyn-tabs</h1>\n        </a>\n        <div id=\"theme-container\">\n          <label htmlFor=\"theme-selector\">Theme : </label>\n          <select id=\"theme-selector\" onChange={onChangeTheme} value={scopeSelector}>\n            <option key=\"2\" value=\"card\">\n              card\n            </option>\n            <option key=\"1\" value=\"bootstrap\">\n              bootstrap\n            </option>\n            <option key=\"3\" value=\"basic\">\n              basic\n            </option>\n            <option key=\"4\" value=\"classic\">\n              classic\n            </option>\n          </select>\n        </div>\n      </div>\n      <a href=\"https://github.com/dev-javascript/react-dyn-tabs\" target=\"_blank\">\n        <img\n          id=\"github-img\"\n          src={`${process.env.PUBLIC_URL}/img/forkme_right_red_aa0000.svg`}\n          alt=\"Fork me on GitHub\"\n        />\n      </a>\n      <div className={scopeSelector}>\n        <MainComponent />\n      </div>\n      <ShowCode theme={scopeSelector}></ShowCode>\n      <div id=\"code-container\">\n        <pre>\n          <code></code>\n        </pre>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","/** @jsxRuntime classic */\nimport 'react-app-polyfill/ie9';\n// import 'react-app-polyfill/stable';\nimport 'core-js/stable';\nimport 'regenerator-runtime/runtime';\nimport 'element-scroll-polyfill';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}