{"version":3,"sources":["components/useLog.js","components/main-component.js","components/show-code/showCode.js","components/show-code/service.js","App.js","index.js"],"names":["useLog","logRef","useRef","useState","messages","setMessages","useEffect","current","scrollTo","scrollHeight","className","ref","onClick","message","console","log","props","ConsoleComponent","_instance","allComponents","Panel1","Panel2","Panel3","Panel4","options","tabs","id","title","panelComponent","iconClass","selectedTabID","onLoad","onInit","onChange","onOpen","beforeSelect","onFirstSelect","onSelect","beforeClose","onClose","onDestroy","useDynTabs","Tablist","Panellist","ready","isVertical","setIsVertical","instance","actions","openNewTab","open","closable","then","toggleDirection","setOption","getOption","refresh","toggleVertical","_isVertical","selectTab4","isOpen","select","disableSelectedTab","setTab","getData","disable","closeSelectedTab","close","disableAccessibility","customizeCloseIcon","e","target","includes","openTabIDs","map","api","tabProps","style","padding","children","iconProps","margin","background","borderRadius","width","display","theme","showCode","setShowCode","code","replace","getCode","htmlFor","type","value","App","scopeSelector","setScopeSelector","href","key","src","process","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iXA8BeA,EA7BA,WACb,IAAMC,EAASC,iBAAO,MACtB,EAA8BC,mBAAS,IAAvC,mBAAKC,EAAL,KAAeC,EAAf,KAMAC,qBAAU,WACRL,EAAOM,QAAQC,SAAS,EAAGP,EAAOM,QAAQE,iBAkB5C,MAAO,CAhBkB,WACvB,OACE,yBAAKC,UAAU,iBACb,yBAAKA,UAAU,MAAMC,IAAKV,GACxB,6BAAMG,GACLA,GACC,0BACEM,UAAU,wBACVE,QAAS,WACPP,EAAY,UAjBP,SAACQ,GAClBC,QAAQC,IAAIF,GAEZR,EADAD,EAAWA,EAAW,KAAOS,MCHlB,WAAUG,GACvB,IAAML,EAAMT,iBAAO,IACnB,EAAgCF,IAAhC,mBAAOiB,EAAP,KAAyBF,EAAzB,KAEAJ,EAAIJ,QAAQQ,IAAMA,EAClB,IA4DIG,EA5DEC,EAAgB,CACpBC,OAAQ,SAACJ,GAAD,OAAW,6CACnBK,OAAQ,SAACL,GAAD,OAAW,6CACnBM,OAAQ,SAACN,GAAD,OAAW,6CACnBO,OAAQ,SAACP,GAAD,OAAW,8CAEfQ,EAAU,CACdC,KAAM,CACJ,CACEC,GAAI,IACJC,MAAO,QACPC,eAAgBT,EAAcC,OAC9BS,UAAW,cAEb,CACEH,GAAI,IACJC,MAAO,QACPC,eAAgBT,EAAcE,OAC9BQ,UAAW,cAEb,CAAEH,GAAI,IAAKC,MAAO,QAASC,eAAgBT,EAAcG,QACzD,CAAEI,GAAI,IAAKC,MAAO,QAASC,eAAgBT,EAAcI,SAE3DO,cAAe,IACfC,OAAQ,WACNpB,EAAIJ,QAAQQ,IAAI,aAElBiB,OAAQ,WAENlB,QAAQC,IAAI,aAEdkB,SAAU,WACRtB,EAAIJ,QAAQQ,IAAI,eAElBmB,OAAQ,WACNvB,EAAIJ,QAAQQ,IAAI,aAElBoB,aAAc,WAEZ,OADAxB,EAAIJ,QAAQQ,IAAI,mBACT,GAETqB,cAAe,WACbzB,EAAIJ,QAAQQ,IAAI,oBAElBsB,SAAU,WACR1B,EAAIJ,QAAQQ,IAAI,eAElBuB,YAAa,WAEX,OADA3B,EAAIJ,QAAQQ,IAAI,kBACT,GAETwB,QAAS,WACP5B,EAAIJ,QAAQQ,IAAI,cAElByB,UAAW,WACT7B,EAAIJ,QAAQQ,IAAI,iBAGpB,EAAoC0B,YAAWjB,GAA/C,mBAAOkB,EAAP,KAAgBC,EAAhB,KAA2BC,EAA3B,KACA,EAAoCzC,oBAAS,GAA7C,mBAAO0C,EAAP,KAAmBC,EAAnB,KAEAF,GAAM,SAACG,GACL7B,EAAY6B,KAEd,IAAMC,EAAU,CACdC,WAAY,WACV/B,EACGgC,KAAK,CACJvB,MAAO,UACPwB,UAAU,EACVvB,eAAgB,kBAAM,iDAEvBwB,MAAK,WACJzC,EAAIJ,QAAQQ,IAAI,yBAGtBsC,gBAAiB,WACfnC,EACGoC,UACC,YACqC,QAArCpC,EAAUqC,UAAU,aAAyB,MAAQ,OAEtDC,WAELC,eAAgB,WACd,IAAMC,EAAcxC,EAAUqC,UAAU,cACxCrC,EAAUoC,UAAU,cAAeI,GAAaF,UAChDV,GAAeY,IAEjBC,WAAY,WACVzC,EAAU0C,OAAO,MACf1C,EAAU2C,OAAO,KAAKT,MAAK,WACzBzC,EAAIJ,QAAQQ,IAAI,2BAGtB+C,mBAAoB,WAClB5C,EACG6C,OAAO7C,EAAU8C,UAAUlC,cAAe,CAAEmC,SAAS,IACrDT,WAELU,iBAAkB,WAChBhD,EAAUiD,MAAMjD,EAAU8C,UAAUlC,gBAEtCsC,qBAAsB,WACpBlD,EAAUoC,UAAU,iBAAiB,GAAOE,WAE9Ca,mBAAoB,WAClBnD,EAAUoC,UAAU,gBAAgB,SAAUgB,GAC5C,OAAIA,EAAEC,OAAO7D,UAAU8D,SAAS,cAGhC7D,EAAIJ,QAAQQ,IAAI,mBACT,MAETG,EAAU8C,UAAUS,WAAWC,KAAI,SAAChD,GAClCR,EAAU6C,OAAOrC,EAAI,CAAEyB,UAAU,OAEnCjC,EACGoC,UAAU,gBAAgB,SAACtC,GAC1B,IAAQU,EAAsBV,EAAtBU,GAASqB,EAAa/B,EAAlB2D,IACZ,OACE,oCACE,2BAAY3D,EAAM4D,SAChB,0BACEhE,QAAS,WACPmC,EAASoB,MAAMzC,IAEjBhB,UAAU,cACVmE,MAAO,CAAEC,QAAS,eAEnB9D,EAAM+D,SACN/D,EAAMgE,WAAa,yBAAUhE,EAAMgE,gBAK3CxB,YAGP,OACE,oCACE,yBAAK9B,GAAG,WACN,6BACE,4BAAQd,QAASoC,EAAQC,YAAzB,gBACA,4BAAQrC,QAASoC,EAAQK,iBAAzB,oBACA,4BAAQzC,QAASoC,EAAQS,gBAAzB,yBAGA,4BAAQ7C,QAASoC,EAAQW,YAAzB,gBACA,4BAAQ/C,QAASoC,EAAQc,oBAAzB,wBAGA,4BAAQlD,QAASoC,EAAQkB,kBAAzB,sBACA,4BAAQtD,QAASoC,EAAQoB,sBAAzB,yBAGA,4BAAQxD,QAASoC,EAAQqB,oBAAzB,0BAKJ,yBACEQ,MAAO,CACLI,OAAQ,OACRC,WAAY,QACZJ,QAAS,OACTK,aAAc,QAGhB,yBAAKN,MAAO,CAAEO,MAAO,OAAQC,QAASxC,EAAa,QAAU,UAC3D,kBAACH,EAAD,MACA,kBAACC,EAAD,QAGJ,kBAAC1B,EAAD,QCnLS,G,MAAA,YAAoB,IAATqE,EAAQ,EAARA,MACxB,EAAgCnF,oBAAS,GAAzC,mBAAOoF,EAAP,KAAiBC,EAAjB,KACMC,ECLe,SAACH,GA+LtB,MA9La,g4MA6LTI,QAAQ,SAAUJ,GDzLTK,CAAQL,GAIrB,OACE,oCACE,yBAAK5E,UAAU,aACb,2BAAOkF,QAAQ,sBAAf,aACA,2BAAOC,KAAK,WAAWnE,GAAG,qBAAqBoE,MAAOP,EAAUtD,SAP7C,SAACqC,GACxBkB,GAAaD,OAQVA,GAAY,6BAAME,MEqDVM,MA3Df,WACE,MAA0C5F,mBAAS,QAAnD,mBAAO6F,EAAP,KAAsBC,EAAtB,KAIA,OACE,oCACE,yBAAKvE,GAAG,UACN,uBACEwE,KAAK,mDACL3B,OAAO,UAEP,+CAEF,yBAAK7C,GAAG,mBACN,2BAAOkE,QAAQ,kBAAf,YACA,4BACElE,GAAG,iBACHO,SAhBY,SAACqC,GACrB2B,EAAiB3B,EAAEC,OAAOuB,QAgBlBA,MAAOE,GAEP,4BAAQG,IAAI,IAAIL,MAAM,QAAtB,QAGA,4BAAQK,IAAI,IAAIL,MAAM,aAAtB,aAGA,4BAAQK,IAAI,IAAIL,MAAM,SAAtB,SAGA,4BAAQK,IAAI,IAAIL,MAAM,WAAtB,cAMN,uBACEI,KAAK,mDACL3B,OAAO,UAEP,yBACE7C,GAAG,aACH0E,IAAG,UAAKC,kBAAL,oCACHC,IAAI,uBAGR,yBAAK5F,UAAWsF,GACd,kBAAC,EAAD,OAEF,kBAAC,EAAD,CAAUV,MAAOU,IACjB,yBAAKtE,GAAG,kBACN,6BACE,mCCxDV6E,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.3da916a8.chunk.js","sourcesContent":["import React, {useState, useRef, useEffect} from 'react';\r\nconst useLog = () => {\r\n  const logRef = useRef(null);\r\n  let [messages, setMessages] = useState('');\r\n  const addMessage = (message) => {\r\n    console.log(message);\r\n    messages = messages + '\\n' + message;\r\n    setMessages(messages);\r\n  };\r\n  useEffect(() => {\r\n    logRef.current.scrollTo(0, logRef.current.scrollHeight);\r\n  });\r\n  const ConsoleComponent = () => {\r\n    return (\r\n      <div className=\"log-container\">\r\n        <div className=\"log\" ref={logRef}>\r\n          <pre>{messages}</pre>\r\n          {messages && (\r\n            <span\r\n              className=\"fa fa-trash clear-log\"\r\n              onClick={() => {\r\n                setMessages('');\r\n              }}></span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  return [ConsoleComponent, addMessage];\r\n};\r\nexport default useLog;\r\n","import React, { useState, useRef } from \"react\";\r\nimport useDynTabs from \"react-dyn-tabs\";\r\nimport useLog from \"./useLog.js\";\r\nexport default function (props) {\r\n  const ref = useRef({});\r\n  const [ConsoleComponent, log] = useLog();\r\n  // assign and update ref.current.log with new value of log function\r\n  ref.current.log = log;\r\n  const allComponents = {\r\n    Panel1: (props) => <p>tab content 1</p>,\r\n    Panel2: (props) => <p>tab content 2</p>,\r\n    Panel3: (props) => <p>tab content 3</p>,\r\n    Panel4: (props) => <p>tab content 4</p>,\r\n  };\r\n  const options = {\r\n    tabs: [\r\n      {\r\n        id: \"1\",\r\n        title: \"tab 1\",\r\n        panelComponent: allComponents.Panel1,\r\n        iconClass: \"fa fa-home\",\r\n      },\r\n      {\r\n        id: \"2\",\r\n        title: \"tab 2\",\r\n        panelComponent: allComponents.Panel2,\r\n        iconClass: \"fa fa-book\",\r\n      },\r\n      { id: \"3\", title: \"tab 3\", panelComponent: allComponents.Panel3 },\r\n      { id: \"4\", title: \"tab 4\", panelComponent: allComponents.Panel4 },\r\n    ],\r\n    selectedTabID: \"1\",\r\n    onLoad: function () {\r\n      ref.current.log(\"[onLoad]\");\r\n    },\r\n    onInit: function () {\r\n      //don't use setState inside the onInit callback because it leads to an infinite loop.\r\n      console.log(\"[onInit]\");\r\n    },\r\n    onChange: function () {\r\n      ref.current.log(\"[onChange]\");\r\n    },\r\n    onOpen: function () {\r\n      ref.current.log(\"[onOpen]\");\r\n    },\r\n    beforeSelect: function () {\r\n      ref.current.log(\"[beforeSelect]\");\r\n      return true;\r\n    },\r\n    onFirstSelect: function () {\r\n      ref.current.log(\"[onFirstSelect]\");\r\n    },\r\n    onSelect: function () {\r\n      ref.current.log(\"[onSelect]\");\r\n    },\r\n    beforeClose: function () {\r\n      ref.current.log(\"[beforeClose]\");\r\n      return true;\r\n    },\r\n    onClose: function () {\r\n      ref.current.log(\"[onClose]\");\r\n    },\r\n    onDestroy: function () {\r\n      ref.current.log(\"[onDestroy]\");\r\n    },\r\n  };\r\n  const [Tablist, Panellist, ready] = useDynTabs(options);\r\n  const [isVertical, setIsVertical] = useState(false);\r\n  let _instance;\r\n  ready((instance) => {\r\n    _instance = instance;\r\n  });\r\n  const actions = {\r\n    openNewTab: () => {\r\n      _instance\r\n        .open({\r\n          title: \"new tab\",\r\n          closable: false,\r\n          panelComponent: () => <p>new tab content</p>,\r\n        })\r\n        .then(() => {\r\n          ref.current.log(\"(new tab is open)\");\r\n        });\r\n    },\r\n    toggleDirection: () => {\r\n      _instance\r\n        .setOption(\r\n          \"direction\",\r\n          _instance.getOption(\"direction\") === \"ltr\" ? \"rtl\" : \"ltr\"\r\n        )\r\n        .refresh();\r\n    },\r\n    toggleVertical: () => {\r\n      const _isVertical = _instance.getOption(\"isVertical\");\r\n      _instance.setOption(\"isVertical\", !_isVertical).refresh();\r\n      setIsVertical(!_isVertical);\r\n    },\r\n    selectTab4: () => {\r\n      _instance.isOpen(\"4\") &&\r\n        _instance.select(\"4\").then(() => {\r\n          ref.current.log(\"(tab 4 is selected)\");\r\n        });\r\n    },\r\n    disableSelectedTab: () => {\r\n      _instance\r\n        .setTab(_instance.getData().selectedTabID, { disable: true })\r\n        .refresh();\r\n    },\r\n    closeSelectedTab: () => {\r\n      _instance.close(_instance.getData().selectedTabID);\r\n    },\r\n    disableAccessibility: () => {\r\n      _instance.setOption(\"accessibility\", false).refresh();\r\n    },\r\n    customizeCloseIcon: () => {\r\n      _instance.setOption(\"beforeSelect\", function (e) {\r\n        if (e.target.className.includes(\"fa-close\")) {\r\n          return false;\r\n        }\r\n        ref.current.log(\"[beforeSelect]\");\r\n        return true;\r\n      });\r\n      _instance.getData().openTabIDs.map((id) => {\r\n        _instance.setTab(id, { closable: false });\r\n      });\r\n      _instance\r\n        .setOption(\"tabComponent\", (props) => {\r\n          const { id, api: instance } = props;\r\n          return (\r\n            <>\r\n              <button {...props.tabProps}>\r\n                <span\r\n                  onClick={() => {\r\n                    instance.close(id);\r\n                  }}\r\n                  className=\"fa fa-close\"\r\n                  style={{ padding: \"0em 0.4em\" }}\r\n                ></span>\r\n                {props.children}\r\n                {props.iconProps && <span {...props.iconProps}></span>}\r\n              </button>\r\n            </>\r\n          );\r\n        })\r\n        .refresh();\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <div id=\"actions\">\r\n        <div>\r\n          <button onClick={actions.openNewTab}>open new tab</button>\r\n          <button onClick={actions.toggleDirection}>toggle direction</button>\r\n          <button onClick={actions.toggleVertical}>\r\n            vertical | horizontal\r\n          </button>\r\n          <button onClick={actions.selectTab4}>select tab 4</button>\r\n          <button onClick={actions.disableSelectedTab}>\r\n            disable selected tab\r\n          </button>\r\n          <button onClick={actions.closeSelectedTab}>close selected tab</button>\r\n          <button onClick={actions.disableAccessibility}>\r\n            disable accessibility\r\n          </button>\r\n          <button onClick={actions.customizeCloseIcon}>\r\n            customize close icon\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          margin: \"10px\",\r\n          background: \"white\",\r\n          padding: \"10px\",\r\n          borderRadius: \"7px\",\r\n        }}\r\n      >\r\n        <div style={{ width: \"100%\", display: isVertical ? \"table\" : \"block\" }}>\r\n          <Tablist></Tablist>\r\n          <Panellist></Panellist>\r\n        </div>\r\n      </div>\r\n      <ConsoleComponent></ConsoleComponent>\r\n    </>\r\n  );\r\n}\r\n","import React, {useState} from 'react';\r\nimport {getCode} from './service.js';\r\nimport './show-code.css';\r\nexport default function ({theme}) {\r\n  const [showCode, setShowCode] = useState(false);\r\n  const code = getCode(theme);\r\n  const checkboxOnChange = (e) => {\r\n    setShowCode(!showCode);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"show-code\">\r\n        <label htmlFor=\"show-code-checkbox\">show code</label>\r\n        <input type=\"checkbox\" id=\"show-code-checkbox\" value={showCode} onChange={checkboxOnChange}></input>\r\n      </div>\r\n      {showCode && <pre>{code}</pre>}\r\n    </>\r\n  );\r\n}\r\n","export const getCode = (theme) => {\r\n  const code = `\r\n    import React, {useState, useRef} from 'react';\r\n    import 'react-dyn-tabs/style/react-dyn-tabs.min.css';\r\n    import 'react-dyn-tabs/themes/react-dyn-tabs-@theme.min.css';\r\n    import useDynTabs from 'react-dyn-tabs';\r\n    import useLog from './useLog.js';\r\n    export default function (props) {\r\n      const ref = useRef({});\r\n      const [ConsoleComponent, log] = useLog();\r\n      // assign and update ref.current.log with new value of log function\r\n      ref.current.log = log;\r\n      const allComponents = {\r\n        Panel1: (props) => <p>tab content 1</p>,\r\n        Panel2: (props) => <p>tab content 2</p>,\r\n        Panel3: (props) => <p>tab content 3</p>,\r\n        Panel4: (props) => <p>tab content 4</p>,\r\n      };\r\n      const options = {\r\n        tabs: [\r\n          {\r\n            id: \"1\",\r\n            title: \"tab 1\",\r\n            panelComponent: allComponents.Panel1,\r\n            iconClass: \"fa fa-home\",\r\n          },\r\n          {\r\n            id: \"2\",\r\n            title: \"tab 2\",\r\n            panelComponent: allComponents.Panel2,\r\n            iconClass: \"fa fa-book\",\r\n          },\r\n          { id: \"3\", title: \"tab 3\", panelComponent: allComponents.Panel3 },\r\n          { id: \"4\", title: \"tab 4\", panelComponent: allComponents.Panel4 },\r\n        ],\r\n        selectedTabID: \"1\",\r\n        onLoad: function () {\r\n          ref.current.log(\"[onLoad]\");\r\n        },\r\n        onInit: function () {\r\n          //don't use setState inside the onInit callback because it leads to an infinite loop.\r\n          console.log(\"[onInit]\");\r\n        },\r\n        onChange: function () {\r\n          ref.current.log(\"[onChange]\");\r\n        },\r\n        onOpen: function () {\r\n          ref.current.log(\"[onOpen]\");\r\n        },\r\n        beforeSelect: function () {\r\n          ref.current.log(\"[beforeSelect]\");\r\n          return true;\r\n        },\r\n        onFirstSelect: function () {\r\n          ref.current.log(\"[onFirstSelect]\");\r\n        },\r\n        onSelect: function () {\r\n          ref.current.log(\"[onSelect]\");\r\n        },\r\n        beforeClose: function () {\r\n          ref.current.log(\"[beforeClose]\");\r\n          return true;\r\n        },\r\n        onClose: function () {\r\n          ref.current.log(\"[onClose]\");\r\n        },\r\n        onDestroy: function () {\r\n          ref.current.log(\"[onDestroy]\");\r\n        },\r\n      };\r\n      const [Tablist, Panellist, ready] = useDynTabs(options);\r\n      const [isVertical, setIsVertical] = useState(false);\r\n      let _instance;\r\n      ready((instance) => {\r\n        _instance = instance;\r\n      });\r\n      const actions = {\r\n        openNewTab: () => {\r\n          _instance\r\n            .open({\r\n              title: \"new tab\",\r\n              closable: false,\r\n              panelComponent: () => <p>new tab content</p>,\r\n            })\r\n            .then(() => {\r\n              ref.current.log(\"(new tab is open)\");\r\n            });\r\n        },\r\n        toggleDirection: () => {\r\n          _instance\r\n            .setOption(\r\n              \"direction\",\r\n              _instance.getOption(\"direction\") === \"ltr\" ? \"rtl\" : \"ltr\"\r\n            )\r\n            .refresh();\r\n        },\r\n        toggleVertical: () => {\r\n          const _isVertical = _instance.getOption(\"isVertical\");\r\n          _instance.setOption(\"isVertical\", !_isVertical).refresh();\r\n          setIsVertical(!_isVertical);\r\n        },\r\n        selectTab4: () => {\r\n          _instance.isOpen(\"4\") &&\r\n            _instance.select(\"4\").then(() => {\r\n              ref.current.log(\"(tab 4 is selected)\");\r\n            });\r\n        },\r\n        disableSelectedTab: () => {\r\n          _instance\r\n            .setTab(_instance.getData().selectedTabID, { disable: true })\r\n            .refresh();\r\n        },\r\n        closeSelectedTab: () => {\r\n          _instance.close(_instance.getData().selectedTabID);\r\n        },\r\n        disableAccessibility: () => {\r\n          _instance.setOption(\"accessibility\", false).refresh();\r\n        },\r\n        customizeCloseIcon: () => {\r\n          _instance.setOption(\"beforeSelect\", function (e) {\r\n            if (e.target.className.includes(\"fa-close\")) {\r\n              return false;\r\n            }\r\n            ref.current.log(\"[beforeSelect]\");\r\n            return true;\r\n          });\r\n          _instance.getData().openTabIDs.map((id) => {\r\n            _instance.setTab(id, { closable: false });\r\n          });\r\n          _instance\r\n            .setOption(\"tabComponent\", (props) => {\r\n              const { id, api: instance } = props;\r\n              return (\r\n                <>\r\n                  <button {...props.tabProps}>\r\n                    <span\r\n                      onClick={() => {\r\n                        instance.close(id);\r\n                      }}\r\n                      className=\"fa fa-close\"\r\n                      style={{ padding: \"0em 0.4em\" }}\r\n                    ></span>\r\n                    {props.children}\r\n                    {props.iconProps && <span {...props.iconProps}></span>}\r\n                  </button>\r\n                </>\r\n              );\r\n            })\r\n            .refresh();\r\n        },\r\n      };\r\n      return (\r\n        <>\r\n          <div id=\"actions\">\r\n            <div>\r\n              <button onClick={actions.openNewTab}>open new tab</button>\r\n              <button onClick={actions.toggleDirection}>toggle direction</button>\r\n              <button onClick={actions.toggleVertical}>\r\n                vertical | horizontal\r\n              </button>\r\n              <button onClick={actions.selectTab4}>select tab 4</button>\r\n              <button onClick={actions.disableSelectedTab}>\r\n                disable selected tab\r\n              </button>\r\n              <button onClick={actions.closeSelectedTab}>close selected tab</button>\r\n              <button onClick={actions.disableAccessibility}>\r\n                disable accessibility\r\n              </button>\r\n              <button onClick={actions.customizeCloseIcon}>\r\n                customize close icon\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              margin: \"10px\",\r\n              background: \"white\",\r\n              padding: \"10px\",\r\n              borderRadius: \"7px\",\r\n            }}\r\n          >\r\n            <div style={{ width: \"100%\", display: isVertical ? \"table\" : \"block\" }}>\r\n              <Tablist></Tablist>\r\n              <Panellist></Panellist>\r\n            </div>\r\n          </div>\r\n          <ConsoleComponent></ConsoleComponent>\r\n        </>\r\n      );\r\n    }\r\n    `.replace(\"@theme\", theme);\r\n  return code;\r\n};\r\n","import React, { useState } from \"react\";\nimport \"react-dyn-tabs/style/react-dyn-tabs.css\";\nimport \"./scoped-themes/card.css\";\nimport \"./scoped-themes/classic.css\";\nimport \"./scoped-themes/basic.css\";\nimport \"./scoped-themes/bootstrap.css\";\nimport \"./App.css\";\nimport MainComponent from \"./components/main-component.js\";\nimport ShowCode from \"./components/show-code/showCode.js\";\nfunction App() {\n  const [scopeSelector, setScopeSelector] = useState(\"card\");\n  const onChangeTheme = (e) => {\n    setScopeSelector(e.target.value);\n  };\n  return (\n    <>\n      <div id=\"header\">\n        <a\n          href=\"https://github.com/dev-javascript/react-dyn-tabs\"\n          target=\"_blank\"\n        >\n          <h1>react-dyn-tabs</h1>\n        </a>\n        <div id=\"theme-container\">\n          <label htmlFor=\"theme-selector\">Theme : </label>\n          <select\n            id=\"theme-selector\"\n            onChange={onChangeTheme}\n            value={scopeSelector}\n          >\n            <option key=\"2\" value=\"card\">\n              card\n            </option>\n            <option key=\"1\" value=\"bootstrap\">\n              bootstrap\n            </option>\n            <option key=\"3\" value=\"basic\">\n              basic\n            </option>\n            <option key=\"4\" value=\"classic\">\n              classic\n            </option>\n          </select>\n        </div>\n      </div>\n      <a\n        href=\"https://github.com/dev-javascript/react-dyn-tabs\"\n        target=\"_blank\"\n      >\n        <img\n          id=\"github-img\"\n          src={`${process.env.PUBLIC_URL}/img/forkme_right_red_aa0000.svg`}\n          alt=\"Fork me on GitHub\"\n        />\n      </a>\n      <div className={scopeSelector}>\n        <MainComponent />\n      </div>\n      <ShowCode theme={scopeSelector}></ShowCode>\n      <div id=\"code-container\">\n        <pre>\n          <code></code>\n        </pre>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}